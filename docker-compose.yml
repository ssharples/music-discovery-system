# docker-compose.yml
version: '3.8'

services:
  # Backend Service
  backend:
    build: .
    # No external port needed - frontend nginx proxies internally
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - SENTRY_DSN=${SENTRY_DSN}
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 2
    working_dir: /app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - music-discovery
    labels:
      - "coolify.managed=true"

  # Frontend Service
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - music-discovery
    labels:
      - "coolify.managed=true"

networks:
  music-discovery:
    driver: bridge
